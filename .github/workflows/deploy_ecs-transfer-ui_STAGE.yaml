name: Deploy ECS Transfer UI

on:
  push:
    branches:
      - main

env:
  AWS_REGION: "${{ secrets.AWS_REGION }}"
  ENVIRONMENT: STAGE
  AWS_STAGE: "${{ secrets.AWS_ARN }}"
  REGISTRY: "ghcr.io"
  TAG: "latest"
  CONFIG_SERVER_HOST: "config.develop.buildwithsygma.com"
  CLOUDFLARE_SHARED_CONFIG_URL: "https://cloudflare-ipfs.com/ipfs/QmciQFVzJtNEM77QCPR7MNc7pDhucmbHt3FLk8RsMW2SMr"
  CONFIG_SERVER_PORT: 443
  REACT_APP_SUPPORT_SERVICE: "Discord"
  REACT_APP_SUPPORT_URL: "https://discord.com/invite/Qdf6GyNB5J"

jobs:
  push:
    name: push
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: checkout the source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: login to ghcr
        id: ghcr
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: build / tag / push docker image into ghcr
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/transfer-ui:${{ env.TAG }}
          build-args: |
            CONFIG_SERVER_HOST=${{ env.CONFIG_SERVER_HOST }}
            CONFIG_SERVER_PORT=${{ env.CONFIG_SERVER_PORT }}
            REACT_APP_SUPPORT_URL=${{ env.REACT_APP_SUPPORT_URL }}
            REACT_APP_SUPPORT_SERVICE=${{ env.REACT_APP_SUPPORT_SERVICE }}
            CLOUDFLARE_SHARED_CONFIG_URL=${{ env.CLOUDFLARE_SHARED_CONFIG_URL }}

  deploy:
    needs: push
    name: Deploy Transfer UI
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: checkout the source code
        uses: actions/checkout@v3

      - name: checkout ecs repo
        uses: actions/checkout@v3
        with:
          repository: sygmaprotocol/devops
          token: ${{ secrets.GHCR_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_STAGE }}:role/github-actions-${{ env.ENVIRONMENT }}-chainbridge
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GithubActions

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: "sygma-ui/ecs/task_definition-transfer-ui-${{ env.ENVIRONMENT }}.json"
          service: "transfer-ui-service-${{ env.ENVIRONMENT }}"
          cluster: "transfer-ui-${{ env.ENVIRONMENT }}"
          wait-for-service-stability: true
